openapi: 3.0.0
info:
  title: NFT Market
  description: NFT Market API
  version: 0.0.1
servers:
  - url: http://localhost/api/master/v0
tags:
  - name: base
    description: base api define
  - name: blank
    description: base api define
  - name: guest
    description: 未登入使用者操作界面
  - name: member
    description: 已登入使用者操作界面
  - name: wallet
    description: 錢包操作及幣價資訊
paths:
  /base/ping:
    get:
      tags:
        - base
      summary: 伺服器作動檢查
      description: 檢查伺服器是否有回應，并取得伺服器時間戳。
      parameters:
        - name: now
          in: query
          description: 本地時間戳
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 伺服器時間戳
        default:
          $ref: '#/components/responses/BaseError'
  /blank/ping:
    get:
      tags:
        - blank
      summary: 伺服器作動檢查
      description: >-
        檢查伺服器是否有回應，并取得伺服器時間戳。


        [![](https://mermaid.ink/svg/pako:eNp1kctOwkAUhl-FzFpeoCYmJvAE6q6bhg5CQgup7cIQEjRBgQLtQsqtsQSRi0gQQ7yA8jScmfYtnAYwMcLu5Pzff65pFEmKGHHoXBFSscBp6JCXwdbpXYdaI1evBYNHq3mJ2I7bf6CtV5I3oejAyzR8dryD_CgwkoxNuqyQQYPMLVIogzFZw_vqMCNpXJNqnsyWPra_iE8OGm7PWJO_Lpb37Czknj1L97IGqVf-q97NiFZLkJu64_oOtW3SVtfrDLzm01-VbbXw28NVcz2ZO-x5w5oPbUdhDCzeYFmCchE-Z9QZ0685tNrktuDvs8vuW4yJ--6wC0LXgm4f7nW39giLNpj51be96YIOkIQVSYiL7EVpXg4EeKTGsIR5xLFQxFFBS6g84uUMQ7WUKKg4LMbVpIK4qJC4wAdI0NTkyaUcQZyqaHgLheIC-7i0oTI_eBgjqw?bgColor=!white)](https://mermaid-js.github.io/mermaid-live-editor/edit#pako:eNp1kctOwkAUhl-FzFpeoCYmJvAE6q6bhg5CQgup7cIQEjRBgQLtQsqtsQSRi0gQQ7yA8jScmfYtnAYwMcLu5Pzff65pFEmKGHHoXBFSscBp6JCXwdbpXYdaI1evBYNHq3mJ2I7bf6CtV5I3oejAyzR8dryD_CgwkoxNuqyQQYPMLVIogzFZw_vqMCNpXJNqnsyWPra_iE8OGm7PWJO_Lpb37Czknj1L97IGqVf-q97NiFZLkJu64_oOtW3SVtfrDLzm01-VbbXw28NVcz2ZO-x5w5oPbUdhDCzeYFmCchE-Z9QZ0685tNrktuDvs8vuW4yJ--6wC0LXgm4f7nW39giLNpj51be96YIOkIQVSYiL7EVpXg4EeKTGsIR5xLFQxFFBS6g84uUMQ7WUKKg4LMbVpIK4qJC4wAdI0NTkyaUcQZyqaHgLheIC-7i0oTI_eBgjqw)


        ```mermaid

        graph TD;

        國產疫苗-->二期解盲成功就EUA;

        國產疫苗-->三期歐美標準才可EUA;

        二期解盲成功就EUA-->時效派;

        三期歐美標準才可EUA-->標規派;

        時效派-->需公開透明;

        時效派-->需醫界共識;

        時效派-->需預盤風險;

        時效派--->仍可做三期試驗;

        標規派-->延後半年短缺因應;

        仍可做三期試驗-->可跟國外大型藥廠合作試驗;

        ```
      parameters:
        - name: now
          in: query
          description: 本地時間戳
          schema:
            type: integer
            example: 1653532830797
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 伺服器時間戳
                example: 1653532830797
        default:
          $ref: '#/components/responses/BaseError'
  /guest/register/phone:
    post:
      operationId: guestRegisterPhone
      tags:
        - guest
      description: Register a new user by phone.
      parameters: []
      requestBody:
        description: Register informations
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                emailVerify:
                  type: string
                phone:
                  type: string
                phoneVerify:
                  type: string
                password:
                  type: string
              required:
                - email
                - emailVerify
                - phone
                - phoneVerify
                - password
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '403':
          description: 注冊資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.register.error.email.format
                  emailVerify:
                    type: string
                    example: api.guest.register.error.emailVerify.notMatch
                  phone:
                    type: string
                    example: api.guest.register.error.phone.exist
                  phoneVerify:
                    type: string
                    example: api.guest.register.error.phoneVerify.overTime
                  password:
                    type: string
                    example: api.guest.register.error.password.minLength8
        default:
          $ref: '#/components/responses/BaseError'
  /guest/login/password:
    post:
      operationId: guestLoginPassword
      tags:
        - guest
      description: Login by email and password.
      parameters: []
      requestBody:
        description: Login fields
        required: true
        content:
          application/json:
            schema:
              description: Auth info
              type: object
              required:
                - account
                - password
              properties:
                account:
                  type: string
                  description: email
                password:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '401':
          description: 登入資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  account:
                    type: string
                    example: api.guest.login.password.error.email.notExist
                  password:
                    type: string
                    example: api.guest.login.password.error.password.notMatch
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/email:
    post:
      operationId: guestVerifyEmail
      tags:
        - guest
      description: 寄發電子郵件檢查碼信件
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.verify.email.error.exist
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/phone:
    post:
      operationId: guestVerifyPhone
      tags:
        - guest
      description: 寄發手機檢查碼簡訊
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  example: 886987654321
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  phone:
                    type: string
                    example: api.guest.verify.phone.error.format
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
  /guest/reset/password:
    post:
      operationId: guestResetPassword
      tags:
        - guest
      description: Reset member password.
      parameters: []
      requestBody:
        description: Reset informations
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                emailVerify:
                  type: string
                phoneVerify:
                  type: string
                password:
                  type: string
              required:
                - email
                - emailVerify
                - phoneVerify
                - password
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '403':
          description: 注冊資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.register.error.email.format
                  emailVerify:
                    type: string
                    example: api.guest.register.error.emailVerify.notMatch
                  phoneVerify:
                    type: string
                    example: api.guest.register.error.phoneVerify.overTime
                  password:
                    type: string
                    example: api.guest.register.error.password.minLength8
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/account/phone:
    post:
      operationId: guestVerifyAccountPhone
      tags:
        - guest
      description: 依帳號關聯手機號碼寄發檢查碼簡訊
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.verify.account.phone.error.email.notExist
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
  /member/info:
    get:
      operationId: memberInfo
      tags:
        - member
      description: check and renew auth token
      parameters: []
      responses:
        '200':
          description: 會員基本資料
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                  email:
                    type: string
                  level:
                    type: integer
        '401':
          description: 登入資訊錯誤
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /wallet/balance:
    post:
      operationId: walletBalance
      tags:
        - wallet
      description: wallet balance
      parameters: []
      requestBody:
        description: user id
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
              required:
                - userId
      responses:
        '200':
          description: 錢包餘額
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    symbol:
                      type: string
                      description: 虛擬貨幣名稱
                      example: ETH
                    unit:
                      type: string
                      description: 錢包使用單位
                      example: ether
                    decimal:
                      type: integer
                      description: 小數位數
                      example: 4
                    balance:
                      description: 可動用餘額
                      type: number
                    lock:
                      description: 鎖倉金額
                      type: number
        '401':
          description: 登入資訊錯誤
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /wallet/history:
    post:
      operationId: walletHistory
      tags:
        - wallet
      description: wallet history
      parameters: []
      requestBody:
        description: user id
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                offset:
                  type: integer
                  default: 0
              required:
                - userId
      responses:
        '200':
          description: 錢包存提紀錄
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  offset:
                    type: integer
                  list:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        time:
                          type: number
                        name:
                          type: string
                        symbol:
                          type: string
                        direction:
                          type: string
                          enum:
                            - diposit
                            - withdraw
                        amount:
                          type: number
                        status:
                          type: string
                          enum:
                            - success
                            - cancel
                            - processing
                            - waiting
        '401':
          description: 登入資訊錯誤
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
components:
  schemas:
    BaseAny:
      type: object
      properties: {}
    BaseArrayAny:
      type: array
      items:
        $ref: '#/components/schemas/BaseAny'
    BaseError:
      type: object
      required:
        - code
      properties:
        code:
          description: Error code
          type: integer
        message:
          description: Error Message
          type: string
        data:
          $ref: '#/components/schemas/BaseAny'
  responses:
    BaseAny:
      description: Response any object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseAny'
    BaseArrayAny:
      description: Response array of any
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseArrayAny'
    BaseError:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseError'
    AuthToken:
      description: Auth token.
      content:
        application/json:
          schema:
            description: Login token
            type: object
            required:
              - userId
              - token
            properties:
              userId:
                type: string
              token:
                type: string
  securitySchemes:
    BaseApiKey:
      type: apiKey
      name: apikey
      in: header
