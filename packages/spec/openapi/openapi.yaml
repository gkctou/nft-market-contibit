openapi: 3.0.0
info:
  title: NFT Market
  description: NFT Market API
  version: 0.0.1
servers:
  - url: http://localhost/api/master/v0
tags:
  - name: base
    description: base api define
  - name: blank
    description: base api define
  - name: db
    description: database access
  - name: guest
    description: 未登入使用者操作界面
paths:
  /base/ping:
    get:
      tags:
        - base
      summary: 伺服器作動檢查
      description: 檢查伺服器是否有回應，并取得伺服器時間戳。
      parameters:
        - name: now
          in: query
          description: 本地時間戳
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 伺服器時間戳
        default:
          $ref: '#/components/responses/BaseError'
  /blank/ping:
    get:
      tags:
        - blank
      summary: 伺服器作動檢查
      description: >-
        檢查伺服器是否有回應，并取得伺服器時間戳。

        ```mermaid

        graph TD;

        國產疫苗-->二期解盲成功就EUA;

        國產疫苗-->三期歐美標準才可EUA;

        二期解盲成功就EUA-->時效派;

        三期歐美標準才可EUA-->標規派;

        時效派-->需公開透明;

        時效派-->需醫界共識;

        時效派-->需預盤風險;

        時效派--->仍可做三期試驗;

        標規派-->延後半年短缺因應;

        仍可做三期試驗-->可跟國外大型藥廠合作試驗;

        ```

        <?xml version="1.0" encoding="UTF-8"?>

        <svg enable-background="new 0 0 145 145" version="1.1" viewBox="0 0 145
        145" xml:space="preserve" xmlns="http://www.w3.org/2000/svg">

        <rect width="145" height="145" fill="#5ABCBB"/>

        <path d="m109.37 115.39c-4.964-9.396-36.875-15.292-36.875-15.292s-31.91
        5.896-36.874 15.292c-3.668 13.039-6.737 29.606-6.737 29.606h87.223c1e-3
        0-2.071-17.764-6.737-29.606z" fill="#F1C9A5"/>

        <path d="m72.499 100.1s31.911 5.896 36.875 15.292c4.665 11.842 6.737
        29.606 6.737 29.606h-43.612v-44.898z" fill="#E4B692"/>

        <rect x="63.813" y="81" width="17.374" height="29.077" fill="#F1C9A5"/>

        <rect x="72.499" y="81" width="8.688" height="29.077" fill="#E4B692"/>

        <path d="m63.813 94.474c1.563 4.485 7.868 7.057 12.499 7.057 1.676 0
        3.306-0.281 4.875-0.795v-19.736h-17.374v13.474z" enable-background="new"
        fill="#DDAC8C"         opacity=".1"/>

        <path d="m94.837 62.653c0-18.162-10.001-28.489-22.338-28.489-12.336
        0-22.337 10.327-22.337 28.489 0 24.428 10.001 32.886 22.337 32.886
        12.338 0 22.338-9.476         22.338-32.886z" fill="#F1C9A5"/>

        <path d="m94.837 62.653c0-18.162-10.001-28.489-22.338-28.489-12.336
        0-22.337 10.327-22.337 28.489 0 24.428 10.001 32.886 22.337 32.886
        12.338 0 22.338-9.476         22.338-32.886z" fill="#F1C9A5"/>

        <path d="m45.161 67.031c-0.684-4.957 2.046-9.318 6.092-9.74 4.053-0.422
        7.888 3.259 8.567 8.216 0.683 4.953-2.053 9.315-6.1 9.739-4.049
        0.419-7.88-3.258-8.        559-8.215z" fill="#F1C9A5"/>

        <path d="m94.837
        62.653c0-18.162-10.001-28.489-22.338-28.489v61.375c12.338 0 22.338-9.476
        22.338-32.886z" fill="#E4B692"/>

        <path d="m109.37 115.39c-3.181-6.021-17.418-10.601-27.242-13.117-0.382
        4.99-4.545 8.923-9.633 8.923s-9.25-3.933-9.632-8.923c-9.824 2.516-24.061
        7.096-27.242         13.117-3.668 13.039-6.737 29.606-6.737
        29.606h87.223c1e-3 0-2.071-17.764-6.737-29.606z" fill="#102F41"/>

        <path d="m53.941 84.27c4.859 8.252 9.698 9.528 9.698 9.528l1.466
        4.755h-3.755l-0.915-2.051h-2.015l-0.733-2.517-1.996
        0.839-0.475-2.797h-1.833l-0.641-2.331-1.        374
        0.653-1.374-2.145-1.923-1.025 0.916-3.17h-2.289l0.092-3.357-1.741
        0.56-0.641-2.983-2.931-1.119 2.564-2.611-1.282-0.466
        1.373-2.423-1.007-0.466-0.184-2.        891-2.93-0.559
        1.649-2.611-2.016-3.17 2.382-1.306-1.282-3.169 0.732-2.984-2.747-2.238
        3.846-0.372v-2.797l1.1-2.424-1.1-2.051 2.016-1.678-2.016-1.679
        2.198-2.        238v-1.305l2.016-1.678-0.916-2.611 3.662 0.746
        0.184-4.475 2.748 0.932 0.915-1.864 3.114 0.373s-0.732-1.492
        0.549-1.492c1.282 0 4.397 1.306 4.397 1.306l1.        648-2.238 3.663
        2.611 1.283-2.611 2.381 2.797
        2.234-2.797v25.36c-2.895-0.248-4.433-0.248-10.782-2.735-2.197 1.492-9.28
        11.686-9.28 12.68s-1.222 11.189-1.222         11.189l-1.274-6.08c0-4e-3
        1.27 12.806 3.848 17.185z" fill="#231F20"/>

        <path d="m90.629 84.27c-4.669 8.252-9.318 9.528-9.318 9.528l-1.408
        4.755h3.607l0.88-2.051h1.937l0.703-2.517 1.919 0.839
        0.457-2.797h1.761l0.615-2.331 1.32 0.        653 1.32-2.145
        1.848-1.025-0.88-3.17h2.199l-0.088-3.357 1.673 0.56 0.615-2.983
        2.816-1.119-2.465-2.611 1.233-0.466-1.32-2.423 0.968-0.466 0.177-2.891
        2.814-0.        559-1.584-2.611 1.937-3.17-2.288-1.306
        1.231-3.169-0.703-2.984 2.64-2.238-3.695-0.372v-2.797l-1.057-2.424
        1.057-2.051-1.937-1.678 1.937-1.679-2.112-2.238v-1.       
        305l-1.936-1.678 0.881-2.611-3.52 0.746-0.177-4.475-2.64
        0.932-0.88-1.864-2.992 0.373s0.704-1.492-0.527-1.492c-1.232 0-4.225
        1.306-4.225 1.306l-1.584-2.238-3.        52 2.611-1.232-2.611-2.288
        2.797-2.146-2.797v25.36c2.78-0.248 4.259-0.248 10.359-2.735 2.112 1.492
        8.917 11.686 8.917 12.68s1.174 11.189 1.174 11.189l1.225-6.       
        08c0-4e-3 -1.22 12.806-3.698 17.185z" fill="#231F20"/>

        <path d="m45.161 67.031c-0.684-4.957 2.046-9.318 6.092-9.74 4.053-0.422
        7.888 3.259 8.567 8.216 0.683 4.953-2.053 9.315-6.1 9.739-4.049
        0.419-7.88-3.258-8.        559-8.215z" fill="#F1C9A5"/>

        <path d="m91.438 75.246c-4.05-0.424-6.783-4.787-6.098-9.739 0.677-4.957
        4.513-8.638 8.563-8.216 4.047 0.422 6.777 4.783 6.094 9.74-0.679
        4.957-4.51 8.634-8.559 8.215z" fill="#E4B692"/>

        </svg>
      parameters:
        - name: now
          in: query
          description: 本地時間戳
          schema:
            type: integer
            example: 1653532830797
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: 伺服器時間戳
                example: 1653532830797
        default:
          $ref: '#/components/responses/BaseError'
  /db/{collection}/create:
    post:
      tags:
        - db
      summary: create doc
      description: create doc
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
        - name: createBy
          in: query
          description: create user id
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DbAny'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAny'
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /db/{collection}/read:
    post:
      tags:
        - db
      summary: read docs
      description: read docs
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DbQueryFn'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseArrayAny'
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /db/{collection}/count:
    post:
      tags:
        - db
      summary: read docs
      description: read docs
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/DbFindFn'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: number
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /db/{collection}/update/{id}:
    post:
      tags:
        - db
      summary: update doc
      description: update doc
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: replace
          in: query
          description: replace
          schema:
            type: boolean
      requestBody:
        $ref: '#/components/requestBodies/DbAny'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAny'
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /db/{collection}/delete/{id}:
    post:
      tags:
        - db
      summary: delete doc
      description: delete doc
      parameters:
        - name: collection
          in: path
          description: collection
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: hash
          in: query
          description: check doc hash
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseAny'
        default:
          $ref: '#/components/responses/BaseError'
      security:
        - BaseApiKey: []
  /guest/register/phone:
    post:
      operationId: guestRegisterPhone
      tags:
        - guest
      description: Register a new user by phone.
      parameters: []
      requestBody:
        description: Register informations
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                emailVerify:
                  type: string
                phone:
                  type: string
                phoneVerify:
                  type: string
                password:
                  type: string
              required:
                - email
                - emailVerify
                - phone
                - phoneVerify
                - password
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '403':
          description: 注冊資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.register.error.email.format
                  emailVerify:
                    type: string
                    example: api.guest.register.error.emailVerify.notMatch
                  phone:
                    type: string
                    example: api.guest.register.error.phone.exist
                  phoneVerify:
                    type: string
                    example: api.guest.register.error.phoneVerify.overTime
                  password:
                    type: string
                    example: api.guest.register.error.password.minLength8
        default:
          $ref: '#/components/responses/BaseError'
  /guest/login/password:
    post:
      operationId: guestLoginPassword
      tags:
        - guest
      description: Login by email and password.
      parameters: []
      requestBody:
        description: Login fields
        required: true
        content:
          application/json:
            schema:
              description: Auth info
              type: object
              required:
                - account
                - password
              properties:
                account:
                  type: string
                  description: email
                password:
                  type: string
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '401':
          description: 登入資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  account:
                    type: string
                    example: api.guest.login.password.error.email.notExist
                  password:
                    type: string
                    example: api.guest.login.password.error.password.notMatch
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/email:
    post:
      operationId: guestVerifyEmail
      tags:
        - guest
      description: 寄發電子郵件檢查碼信件
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.verify.email.error.exist
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/phone:
    post:
      operationId: guestVerifyPhone
      tags:
        - guest
      description: 寄發手機檢查碼簡訊
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  example: 886987654321
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  phone:
                    type: string
                    example: api.guest.verify.phone.error.format
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
  /guest/reset/password:
    post:
      operationId: guestResetPassword
      tags:
        - guest
      description: Reset member password.
      parameters: []
      requestBody:
        description: Reset informations
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                emailVerify:
                  type: string
                phoneVerify:
                  type: string
                password:
                  type: string
              required:
                - email
                - emailVerify
                - phoneVerify
                - password
      responses:
        '200':
          $ref: '#/components/responses/AuthToken'
        '403':
          description: 注冊資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.register.error.email.format
                  emailVerify:
                    type: string
                    example: api.guest.register.error.emailVerify.notMatch
                  phoneVerify:
                    type: string
                    example: api.guest.register.error.phoneVerify.overTime
                  password:
                    type: string
                    example: api.guest.register.error.password.minLength8
        default:
          $ref: '#/components/responses/BaseError'
  /guest/verify/account/phone:
    post:
      operationId: guestVerifyAccountPhone
      tags:
        - guest
      description: 依帳號關聯手機號碼寄發檢查碼簡訊
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                lang:
                  type: string
                  example: en-US
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: 成功送出並取回下次可執行時間
                type: integer
                example: 1653502991840
        '403':
          description: 資訊錯誤
          content:
            application/json:
              schema:
                description: 回傳對應欄位的錯誤訊息/代號
                type: object
                properties:
                  email:
                    type: string
                    example: api.guest.verify.account.phone.error.email.notExist
                  time:
                    description: 下次可執行時間
                    type: integer
        default:
          $ref: '#/components/responses/BaseError'
components:
  schemas:
    BaseAny:
      type: object
      properties: {}
    BaseArrayAny:
      type: array
      items:
        $ref: '#/components/schemas/BaseAny'
    BaseError:
      type: object
      required:
        - code
      properties:
        code:
          description: Error code
          type: integer
        message:
          description: Error Message
          type: string
        data:
          $ref: '#/components/schemas/BaseAny'
    DbJsonFn:
      type: object
      required:
        - jsonFn
      properties:
        jsonFn:
          type: string
    DbQuery:
      type: object
      required:
        - find
      properties:
        find:
          $ref: '#/components/schemas/BaseAny'
        sort:
          $ref: '#/components/schemas/BaseAny'
        skip:
          type: number
        limit:
          type: number
        map:
          description: JSONfn string keys array, or function
          type: string
  responses:
    BaseAny:
      description: Response any object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseAny'
    BaseArrayAny:
      description: Response array of any
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseArrayAny'
    BaseError:
      description: Error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseError'
    AuthToken:
      description: Auth token.
      content:
        application/json:
          schema:
            description: Login token
            type: object
            required:
              - userId
              - token
            properties:
              userId:
                type: string
              token:
                type: string
  securitySchemes:
    BaseApiKey:
      type: apiKey
      name: apikey
      in: header
  requestBodies:
    DbQueryFn:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DbJsonFn'
    DbFindFn:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DbJsonFn'
    DbAny:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseAny'
