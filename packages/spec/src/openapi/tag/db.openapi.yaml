openapi: 3.0.0
info:
  title: ScfMaster AUTH
  version: "0.0.1"
  description: DB api
servers:
  - url: "http://localhost/v0/master"
tags:
  - name: db
    description: database access
security:
  - BaseApiKey: []
paths:
  /db/{collection}/create:
    post:
      tags:
        - db
      summary: create doc
      description: create doc
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
        - name: createBy
          in: query
          description: create user id
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DbAny"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseAny"
        default:
          $ref: "#/components/responses/BaseError"
  /db/{collection}/read:
    post:
      tags:
        - db
      summary: read docs
      description: read docs
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DbQueryFn"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseArrayAny"
        default:
          $ref: "#/components/responses/BaseError"
  /db/{collection}/count:
    post:
      tags:
        - db
      summary: read docs
      description: read docs
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/DbFindFn"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: number
        default:
          $ref: "#/components/responses/BaseError"
  /db/{collection}/update/{id}:
    post:
      tags:
        - db
      summary: update doc
      description: update doc
      parameters:
        - name: collection
          in: path
          required: true
          description: collection
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        # - name: hash
        #   in: query
        #   description: check doc hash
        #   schema:
        #     type: string
        - name: replace
          in: query
          description: replace
          schema:
            type: boolean
      requestBody:
        $ref: "#/components/requestBodies/DbAny"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseAny"
        default:
          $ref: "#/components/responses/BaseError"
  /db/{collection}/delete/{id}:
    post:
      tags:
        - db
      summary: delete doc
      description: delete doc
      parameters:
        - name: collection
          in: path
          description: collection
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: hash
          in: query
          description: check doc hash
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseAny"
        default:
          $ref: "#/components/responses/BaseError"
components:
  requestBodies:
    DbQueryFn:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DbJsonFn"
    DbFindFn:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DbJsonFn"
    DbAny:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BaseAny"
  schemas:
    DbJsonFn:
      type: object
      required:
        - jsonFn
      properties:
        jsonFn:
          type: string
    DbQuery:
      type: object
      required:
        - find
      properties:
        find:
          $ref: "#/components/schemas/BaseAny"
        sort:
          $ref: "#/components/schemas/BaseAny"
        skip:
          type: number
        limit:
          type: number
        map:
          description: JSONfn string keys array, or function
          type: string